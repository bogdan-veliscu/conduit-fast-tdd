name: Continous Integration and Delivery

on: [push]

env:
  IMAGE: docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')sumarizer

  jobs:
    build:
      name: Build Docker image
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2.4.0
          with:
            ref: main
        - name: Log in to GitHub Packages
          run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
          env:
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        - name: Pull image
          run: |
            docker pull ${{env.IMAGE}}:latest || true
        - name: Build image
          run: |
            docker build \
            --cache-from ${{env.IMAGE}}:latest \
            --file ./project/Dockerfile.prod \
            "./project"
        - name: Push image
          run: |
            docker push ${{env.IMAGE}}:latest

    test: Test Docker IMAGE
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          ref: main
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Pull IMAGE
        run: |
          docker pull ${{env.IMAGE}}:latest || true
      - name: Build image
        run: |
            docker build \
            --cache-from ${{env.IMAGE}}:latest \
            --tag ${{env.image}}:latest \
            --file ./project/Dockerfile.prod \
            "./project"

      - name: Run container
        run: |
            docker run \
            -d \
            --name conduit-tdd \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_URL=sqlite://sqlite.db \
            -e DATABASE_TEST_URL=sqlite://sqlite.db \
            -p 5003:8765 \
            ${{env.IMAGE}}:latest
      - name: Pytest
        run: docker exec conduit-tdd python -m pytest .
      - name: Flake8
        run: docker exec conduit-tdd python -m flake8 .
      - name: Black
        run: docker exec conduit-tdd python -m black . --check
      - name: isort
        run: docker exec conduit-tdd python -m isort . --check-only

